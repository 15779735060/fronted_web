(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{384:function(e,t,a){"use strict";a.r(t);var r=a(14),s=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"webpack介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack介绍"}},[e._v("#")]),e._v(" webpack介绍")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://www.webpackjs.com",target:"_blank",rel:"noopener noreferrer"}},[e._v("webpack"),t("OutboundLink")],1),e._v(" 是一个用于现代 JavaScript 应用程序的 静态模块打包工具。当 webpack 处理应用程序时，它会在内部从一个或多个入口点构建一个 依赖图(dependency graph)，然后将你项目中所需的每一个模块组合成一个或多个 bundles，它们均为静态资源，用于展示你的内容")]),e._v(" "),t("h3",{attrs:{id:"webpack与vite的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack与vite的区别"}},[e._v("#")]),e._v(" webpack与vite的区别")]),e._v(" "),t("p",[e._v("  webpack在编译过程中，会将所有模块打包为一个bundle.js文件，然后再运行这个文件。而vite在开发模式下，没有打包的步骤，它利用了浏览器的ES Module Imports特性，只有在真正需要时才编译文件。因此在开发环境下，vite的启动速度非常快。在生产模式下，vite使用Rollup进行打包，提供更好的tree-shaking，代码压缩和性能优化。")])])}),[],!1,null,null,null);t.default=s.exports}}]);