(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{313:function(t,s,a){"use strict";a.r(s);var n=a(14),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h4",{attrs:{id:"string的原型对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string的原型对象方法"}},[t._v("#")]),t._v(" String的原型对象方法")]),t._v(" "),s("p",[t._v("  因为这个对象上方法太多，所以只列出几个常用的方法：concat、replace、slice、split、trim")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//拼接字符串")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' javascript'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello javascript")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//替换字符串，需要注意的是，只匹配一次，但是可以配置正则表达式：str.replace(/\\h/g, 'H')")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'h'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'H'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Hello")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//字符串截取,传入两个参数，分别起始和结束的字符串下标")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//he")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把字符串按照既定规则，生成一个string类型的array")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['h', 'e', 'l', 'l', 'o']")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//去除首尾空格")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trim")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//hello")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),s("h4",{attrs:{id:"number的原型对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#number的原型对象方法"}},[t._v("#")]),t._v(" Number的原型对象方法")]),t._v(" "),s("p",[t._v("  方法：toFixed、toLocaleString、toString")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//传入一个number类型的参数，用于保留x位小数")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toFixed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//99.00")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//千分位转换，假如num的值是99999，那么返回的是99,999，需要注意的是，转换后会变成String类型的数据")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLocaleString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//转换为String类型的数据")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h4",{attrs:{id:"array的原型对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#array的原型对象方法"}},[t._v("#")]),t._v(" Array的原型对象方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("concat")]),t._v(" "),s("td",[t._v("用于连接数组")])]),t._v(" "),s("tr",[s("td",[t._v("filter")]),t._v(" "),s("td",[t._v("按照特定条件对数组进行过滤，返回的是一个数组")])]),t._v(" "),s("tr",[s("td",[t._v("find")]),t._v(" "),s("td",[t._v("查找符合条件的值，一但查到到，则会终止循环，返回数组某项值")])]),t._v(" "),s("tr",[s("td",[t._v("forEach")]),t._v(" "),s("td",[t._v("对数组进行循环，需要注意的是该循环并不会被return所终止")])]),t._v(" "),s("tr",[s("td",[t._v("includes")]),t._v(" "),s("td",[t._v("查找数组中符合特定条件的值，一旦找到，立即返回一个布尔值")])]),t._v(" "),s("tr",[s("td",[t._v("map")]),t._v(" "),s("td",[t._v("对数组进行循环，按照return的值，生成一个新数组")])]),t._v(" "),s("tr",[s("td",[t._v("pop")]),t._v(" "),s("td",[t._v("删除数组中末尾的一项，返回被删除的值")])]),t._v(" "),s("tr",[s("td",[t._v("push")]),t._v(" "),s("td",[t._v("在数组末尾追新加一项，返回被追加的值")])]),t._v(" "),s("tr",[s("td",[t._v("shift")]),t._v(" "),s("td",[t._v("删除数组的第一项，返回被删除的值。跟pop相反")])]),t._v(" "),s("tr",[s("td",[t._v("unshift")]),t._v(" "),s("td",[t._v("在数组最前面追加一项，返回追加的值。跟push相反")])]),t._v(" "),s("tr",[s("td",[t._v("reduce")]),t._v(" "),s("td",[t._v("对数组进行循环，在本次循环里，可以获取到上一次循环，return出来的值")])]),t._v(" "),s("tr",[s("td",[t._v("slice")]),t._v(" "),s("td",[t._v("截取数组，不会改变原数组，传入start和end，代表从数组下标的开始与结束截取。返回截取的数组")])]),t._v(" "),s("tr",[s("td",[t._v("sort")]),t._v(" "),s("td",[t._v("数组排序")])]),t._v(" "),s("tr",[s("td",[t._v("splice")]),t._v(" "),s("td",[t._v("删除从数组下标的开始与结束之间的值，会改变原数组,返回的是被删除的数组")])])])]),t._v(" "),s("h4",{attrs:{id:"obejct的原型对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#obejct的原型对象方法"}},[t._v("#")]),t._v(" Obejct的原型对象方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("hasOwnProperty")]),t._v(" "),s("td",[t._v("传入一个key,用于检测属性是否为对象的自有属性,返回一个布尔值")])]),t._v(" "),s("tr",[s("td",[t._v("isPrototypeOf")]),t._v(" "),s("td",[t._v("用于判断当前对象是否为另外一个对象的原型，如果是就返回 true，否则就返回 false。")])]),t._v(" "),s("tr",[s("td",[t._v("propertyIsEnumerable")]),t._v(" "),s("td",[t._v("传入一个key，用于检测指定的属性是否可枚举，返回一个布尔值")])])])]),t._v(" "),s("h4",{attrs:{id:"function的原型对象方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#function的原型对象方法"}},[t._v("#")]),t._v(" Function的原型对象方法")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("apply")]),t._v(" "),s("td",[t._v("改变this指向，并立即执行该函数，传入两个参数，第一个是this指向，第二个参数是函数的形参，为一个数组")])]),t._v(" "),s("tr",[s("td",[t._v("call")]),t._v(" "),s("td",[t._v("改变this指向，并立即执行该函数，与apply不同的是，函数形参不必为一个数组，可以依次传入")])]),t._v(" "),s("tr",[s("td",[t._v("bind")]),t._v(" "),s("td",[t._v("仅改变this指向，不会执行该函数")])])])])])}),[],!1,null,null,null);s.default=r.exports}}]);