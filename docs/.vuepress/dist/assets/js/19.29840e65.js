(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{293:function(t,s,a){"use strict";a.r(s);var r=a(14),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[t._v("  Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理，是目前世界上最先进的分布式版本控制系统（没有之一）")]),t._v(" "),s("h3",{attrs:{id:"工作流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作流程"}},[t._v("#")]),t._v(" 工作流程")]),t._v(" "),s("p",[t._v("*从远程仓库中克隆 Git 资源作为本地仓库；\n*从本地仓库中checkout代码然后进行代码修改；\n*在提交本地仓库前先将代码提交到暂存区；\n*提交修改，提交到本地仓库；本地仓库中保存修改的各个历史版本；\n*在需要和团队成员共享代码时，可以将修改代码push到远程仓库。")]),t._v(" "),s("h3",{attrs:{id:"集中式vs分布式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集中式vs分布式"}},[t._v("#")]),t._v(" 集中式VS分布式")]),t._v(" "),s("p",[t._v("  集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆，集中式版本控制系统最大的毛病就是必须联网才能工作。"),s("br"),t._v("\n  那分布式版本控制系统与集中式版本控制系统有何不同呢？首先，分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。"),s("br"),t._v("\n  和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。")])])}),[],!1,null,null,null);s.default=n.exports}}]);