(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{409:function(a,e,t){"use strict";t.r(e);var s=t(14),r=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"开发生产环境优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开发生产环境优化"}},[a._v("#")]),a._v(" 开发生产环境优化")]),a._v(" "),e("h4",{attrs:{id:"使用minicssextractplugin把css抽离成单独的文件-避免全部写入style标签里面-提升加载速度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用minicssextractplugin把css抽离成单独的文件-避免全部写入style标签里面-提升加载速度"}},[a._v("#")]),a._v(" 使用MiniCssExtractPlugin把css抽离成单独的文件，避免全部写入style标签里面，提升加载速度")]),a._v(" "),e("h4",{attrs:{id:"使用speedmeasureplugin在项目打包中统计构建耗时-单独对某块耗时较为严重的方面做优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用speedmeasureplugin在项目打包中统计构建耗时-单独对某块耗时较为严重的方面做优化"}},[a._v("#")]),a._v(" 使用SpeedMeasurePlugin在项目打包中统计构建耗时，单独对某块耗时较为严重的方面做优化")]),a._v(" "),e("h4",{attrs:{id:"在生产环境构建的时候-可以考虑不生成sourcemap-提升构建速度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在生产环境构建的时候-可以考虑不生成sourcemap-提升构建速度"}},[a._v("#")]),a._v(" 在生产环境构建的时候，可以考虑不生成sourcemap，提升构建速度")]),a._v(" "),e("h4",{attrs:{id:"使用terserwebpackplugin开启多进程打包-用node计算系统cpu数-灵活配置进程数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用terserwebpackplugin开启多进程打包-用node计算系统cpu数-灵活配置进程数"}},[a._v("#")]),a._v(" 使用TerserWebpackPlugin开启多进程打包，用node计算系统cpu数，灵活配置进程数")]),a._v(" "),e("h4",{attrs:{id:"使用webpack-bundle-analyzer-分析项目体积-做单独的优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack-bundle-analyzer-分析项目体积-做单独的优化"}},[a._v("#")]),a._v(" 使用webpack-bundle-analyzer，分析项目体积，做单独的优化")]),a._v(" "),e("h4",{attrs:{id:"使用runtimechunk对chunk通用的代码进行抽离-减小项目体积"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用runtimechunk对chunk通用的代码进行抽离-减小项目体积"}},[a._v("#")]),a._v(" 使用runtimeChunk对chunk通用的代码进行抽离，减小项目体积")]),a._v(" "),e("h4",{attrs:{id:"使用webpack5的cache构建缓存优化-复用编译结果对开发环境的优化非常明显"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用webpack5的cache构建缓存优化-复用编译结果对开发环境的优化非常明显"}},[a._v("#")]),a._v(" 使用Webpack5的cache构建缓存优化，复用编译结果对开发环境的优化非常明显")]),a._v(" "),e("h4",{attrs:{id:"将通用第三方库打成一个vendor文件-因为第三方库基本不变的-可以充分利用webpack的构建缓存-提升构建速度"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#将通用第三方库打成一个vendor文件-因为第三方库基本不变的-可以充分利用webpack的构建缓存-提升构建速度"}},[a._v("#")]),a._v(" 将通用第三方库打成一个vendor文件,因为第三方库基本不变的，可以充分利用webpack的构建缓存,提升构建速度")])])}),[],!1,null,null,null);e.default=r.exports}}]);